// Lab 4.5_ABs-324 SinkoAE.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream> // библиотека для ввода-вывода
#include <vector>   // для хранения сгенерированных чисел
#include <locale.h> //подключение библиотеки для задач связанных из локализацией

using namespace std;    // использование стандартного пространства имен

void generationAlgorithm(int* S, vector<int>& output, int n, int j, int k) {
// реализует алгоритм генерации псевдослучайных чисел с использованием метода Фибоначчи с запаздыванием
// S - указатель на массив, используемый в качестве таблицы для генерации чисел,
// output - ссылка на вектор, в который будут добавляться сгенерированные числа,
// n - размер таблицы S,
// j и k - индексы, используемые для вычисления новых значений в таблице S.

    for (int t = 0; t < n; t++) {   // итерация от 0 до n
        // вычисляется индекс, который определяется как сумма элементов S[j] и S[k], по модулю n
        int index = (S[j] + S[k]) % n;
        output.push_back(S[index]); // элемент по этому индексу S[index] добавляется в вектор
        // Обновление значений на каждой итерации
        S[t] = S[index];    // элемент по индексу t в таблице S обновляется значением S[index]
        j = (j + 1) % n;    // индекс j увеличивается на 1 и взят по модулю n, чтобы он не выходил за пределы массива
        k = (k + 1) % n;    // индекс k увеличивается на 1 и взят по модулю n, чтобы он не выходил за пределы массива
    }
}

int main() {
    setlocale(LC_ALL, "rus");   //установка русской локали

    //2^i
    const int n = 32;   // объявление константы, которая представляет размер массивов S и K

    // Объявление массивов S и K размера n
    int S[n];
    int K[n];   // значения ключа K

    // Заполнение ключа K
    for (int i = 0; i < n; i++) {
        K[i] = i;
    }
    // Инициализация таблицы S значениями из массива K
    for (int i = 0; i < n; i++) {
        S[i] = K[i];
    }

    // Алгоритм псевдослучайной генерации
    vector<int> output; // вектор для хранения сгенерированных чисел
    int j = 0;  // индекс j
    int k = 1;  // индекс k
    generationAlgorithm(S, output, n, j, k);    // вызов функции для генерации псевдослучайных чисел с использованием метода Фибоначчи с запаздыванием

    // Вывод сгенерированных чисел на экран
    cout << "Сгенерированные числа: " << endl;
    for (int i = 0; i < output.size(); i++) {
        cout << i + 1 << ": " << output[i] << endl;
    }

    return 0;
}